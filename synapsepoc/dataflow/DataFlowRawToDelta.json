{
	"name": "DataFlowRawToDelta",
	"properties": {
		"folder": {
			"name": "INCREMENTAL DELTA"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_to_delta_sourcedata",
						"type": "DatasetReference"
					},
					"name": "Incremental"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "SinkIncremental"
				}
			],
			"transformations": [
				{
					"name": "Upsert"
				}
			],
			"scriptLines": [
				"parameters{",
				"     windowStart as timestamp (addDays(currentTimestamp(),-2)),",
				"     windowEnd as timestamp (currentTimestamp()),",
				"     primaryKey as string ('PersonID')",
				"}",
				"source(output(",
				"          PersonID as integer,",
				"          Name as string,",
				"          LastModifytime as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Incremental",
				"Incremental alterRow(upsertIf(isNull([$primaryKey])==false())) ~> Upsert",
				"Upsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     container: 'sandbox',",
				"     folderPath: 'curated/incremental_tutorial',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:[($primaryKey)],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     preCommands: [],",
				"     postCommands: []) ~> SinkIncremental"
			]
		}
	}
}